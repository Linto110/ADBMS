1.      Write a MongoDB query to sort customer details in ascending order of their name.
INVOICE> db.CUSTOMER.find().sort({name:1})
[
  {
    _id: ObjectId('67ff7068ae5a6d081bd861e2'),
    id: 3,
    name: 'Jaseem',
    city: 'EKM',
    ph_no: 7865789004
  },
  {
    _id: ObjectId('67ff7068ae5a6d081bd861e1'),
    id: 2,
    name: 'Nihal K',
    city: 'CLT',
    ph_no: 7886436709
  }
]

2.Write a MongoDB query to count number of customers in each city.
INVOICE> db.CUSTOMER.aggregate([{$group:{_id:"$city",total_customers:{$sum:1}}}])
[
  { _id: 'CLT', total_customers: 1 },
  { _id: 'EKM', total_customers: 1 }
]

3.      Write a MongoDB query to find minimum and maximum age in each city.

INVOICE> db.CUSTOMER.aggregate([{$group:{_id:"$city",max_age:{$max:"$age"},min_age:{$min:"$age"}}}])
[
  { _id: 'EKM', max_age: 30, min_age: 22 },
  { _id: 'CLT', max_age: 25, min_age: 19 }
]

4.Write a MongoDB query using the $match stage to retrieve all customer documents whose customer_name starts with the letter “A”.

INVOICE> db.CUSTOMER.aggregate([{ $match: { name: { $regex: "^a", $options: "i" }}}])
... 
[
  {
    _id: ObjectId('67ff77bc524cb9765dd861e1'),
    id: 5,
    name: 'Aysha',
    city: 'EKM',
    ph_no: 8976567800,
    age: 22
  }
]

5.Write a query using $lookup to join CUSTOMER and PRODUCT collections and display only customer name, product name, and price.
INVOICE> db.CUSTOMER.aggregate([{$lookup:{from:"PRODUCT",localField:"id",foreignField:"cus_id",as:"Product_details"}},{$project:{_id:0,customerName:"$name",productName:{$arrayElemAt:["$Product_details.name",0]},price:{$arrayElemAt:["$Product_details.price",0]}}}])
[
  { customerName: 'Nihal K', productName: 'plate', price: 60 },
  { customerName: 'Jaseem', productName: 'pen', price: 10 },
  { customerName: 'Roshan', productName: 'soap', price: 45 },
  { customerName: 'Aysha' }
]


//VERIFIED
